// Generated by CoffeeScript 1.7.1
(function() {
  var Filters, displayCart, template, updateCart;

  template = null;

  updateCart = function(id, qty, price) {
    console.log('updateCart ' + id + ', ' + qty + ', ' + price);
    return $.post("/Cart/Update", {
      "productId": id,
      "quantity": qty,
      "price": price
    }, function(data) {
      var _ref;
      $("#message").addClass("alert alert-success");
      $("#message").html("Order updated");
      $.post("/Cart", displayCart);
      if ((_ref = $("#row_" + id)) != null) {
        if (typeof _ref.modal === "function") {
          _ref.modal("hide");
        }
      }
      return $('.modal-backdrop').remove();
    }).fail(function() {
      var _ref;
      $("#message").addClass("alert alert-warning");
      $("#message").html("Your order did not update");
      if ((_ref = $("#row_" + id)) != null) {
        if (typeof _ref.modal === "function") {
          _ref.modal("hide");
        }
      }
      return $('.modal-backdrop').remove();
    });
  };

  displayCart = function(data) {
    var item, total, _i, _len;
    total = 0;
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      item = data[_i];
      item.extended = item.price * item.quantity;
      total += item.extended;
    }
    $("#cartTable").html(template.render({
      total: total,
      cart: data
    }));
    $(".update-cart").bind('click', function(e) {
      var $select;
      if (e.target.nodeName === 'BUTTON') {
        $select = $(this).find('select');
        return updateCart($select.attr('data-id'), $select.val(), $select.attr('data-price'));
      }
    });
    $(".delete-cart").bind('click', function(e) {
      var $this;
      if (e.target.nodeName === 'BUTTON') {
        $this = $(this);
        return updateCart($this.attr('data-id'), $this.attr('data-quantity'), '0.00');
      }
    });
    return $(".delete-all").bind('click', function(e) {
      return $.post("/Cart/Delete", function() {
        $("#message").addClass("alert alert-success");
        $("#message").html("Cart Deleted");
        return $.post("/Cart", displayCart);
      });
    });
  };

  Filters = (function() {
    function Filters() {}

    Filters.decimal = function(input) {
      return Number(input).toFixed(2);
    };

    return Filters;

  })();

  Liquid.Template.registerFilter(Filters);

  $.get("/Content/templates/shopping/index.html", function(data) {
    template = Liquid.Template.parse(data);
    return $.post("/Cart", displayCart);
  });

}).call(this);
